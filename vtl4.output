Grammar

    0 $accept: root $end

    1 root: stmts

    2 stmts: stmt
    3      | stmts stmt

    4 stmt: CONTENT
    5     | directive
    6     | reference
    7     | COMMENT
    8     | MUL_COMMENT

    9 directive: foreach
   10          | if
   11          | set
   12          | parse

   13 foreach: FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END

   15 reference: DOLLARID
   16          | DOLLARID attributes
   17          | DOLLARID indexBody
   18          | DOLLARID indexBody attributes

   19 attributes: attribute
   20           | attributes attribute

   21 attribute: method
   22          | index
   23          | identifier

   24 method: identifier PARENTHESIS params CLOSE_PARENTHESIS
   25       | identifier PARENTHESIS CLOSE_PARENTHESIS

   26 index: identifier indexBody

   27 indexBody: BRACKET simpleliteral CLOSE_BRACKET
   28          | BRACKET reference CLOSE_BRACKET

   29 identifier: DOTID

   30 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END

   34 elseifs: elseif
   35        | elseifs elseif

   36 elseif: ELSEIF PARENTHESIS expression CLOSE_PARENTHESIS stmts

   37 else: ELSE stmts

   38 set: SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS

   39 parse: PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

   40 expression: math
   41           | array
   42           | map

   43 stringliteral: STRING_LITERAL

   44 integerliteral: INTEGER_LITERAL

   45 simpleliteral: stringliteral
   46              | integerliteral

   47 literal: simpleliteral
   48        | array
   49        | map

   50 math: math ADD math
   51     | math SUB math
   52     | math MUL math
   53     | math DIV math
   54     | math MOD math
   55     | SUB math
   56     | PARENTHESIS math CLOSE_PARENTHESIS
   57     | math LOGICAL_OR math
   58     | math LOGICAL_AND math
   59     | math LOGIC_EQUAL math
   60     | math LOGICAL_LT math
   61     | math LOGICAL_LE math
   62     | math LOGICAL_GT math
   63     | math LOGICAL_GE math
   64     | math LOGICAL_NOT_EQUALS math
   65     | integerliteral
   66     | reference
   67     | stringliteral

   68 array: BRACKET params CLOSE_BRACKET
   69      | range
   70      | BRACKET CLOSE_BRACKET

   71 range: BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET

   72 params: param
   73       | params COMMA param

   74 param: literal
   75      | reference
   76      | CONSTANT

   77 map: BRACE map_items CLOSE_BRACE
   78    | BRACE CLOSE_BRACE

   79 map_items: map_item
   80          | map_items COMMA map_item

   81 map_item: stringliteral COLON literal
   82         | stringliteral COLON reference


Terminals, with rules where they appear

$end (0) 0
error (256)
CONTENT (258) 4
PARENTHESIS (259) 13 14 24 25 30 31 32 33 36 38 39 56
CLOSE_PARENTHESIS (260) 13 14 24 25 30 31 32 33 36 38 39 56
BRACKET (261) 27 28 68 70 71
CLOSE_BRACKET (262) 27 28 68 70 71
COMMA (263) 73 80
RANGE (264) 71
BRACE (265) 77 78
CLOSE_BRACE (266) 77 78
COLON (267) 81 82
IN (268) 13 14
FOREACH (269) 13 14
SET (270) 38
PARSE (271) 39
IF (272) 30 31 32 33
ELSEIF (273) 36
ELSE (274) 37
END (275) 13 14 30 31 32 33
DOLLARID (276) 15 16 17 18
DOTID (277) 29
STRING_LITERAL (278) 43
COMMENT (279) 7
MUL_COMMENT (280) 8
CONSTANT (281) 76
INTEGER_LITERAL (282) 44
LOGICAL_AND (283) 58
LOGICAL_OR (284) 57
LOGIC_EQUAL (285) 59
LOGICAL_LT (286) 60
LOGICAL_LE (287) 61
LOGICAL_GT (288) 62
LOGICAL_GE (289) 63
LOGICAL_NOT_EQUALS (290) 64
ADD (291) 50
SUB (292) 51 55
MUL (293) 52
DIV (294) 53
MOD (295) 54
EQUAL (296) 38
UMINUS (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
root (44)
    on left: 1, on right: 0
stmts (45)
    on left: 2 3, on right: 1 3 13 14 30 31 32 33 36 37
stmt (46)
    on left: 4 5 6 7 8, on right: 2 3
directive (47)
    on left: 9 10 11 12, on right: 5
foreach (48)
    on left: 13 14, on right: 9
reference (49)
    on left: 15 16 17 18, on right: 6 13 14 28 38 66 75 82
attributes (50)
    on left: 19 20, on right: 16 18 20
attribute (51)
    on left: 21 22 23, on right: 19 20
method (52)
    on left: 24 25, on right: 21
index (53)
    on left: 26, on right: 22
indexBody (54)
    on left: 27 28, on right: 17 18 26
identifier (55)
    on left: 29, on right: 23 24 25 26
if (56)
    on left: 30 31 32 33, on right: 10
elseifs (57)
    on left: 34 35, on right: 32 33 35
elseif (58)
    on left: 36, on right: 34 35
else (59)
    on left: 37, on right: 31 33
set (60)
    on left: 38, on right: 11
parse (61)
    on left: 39, on right: 12
expression (62)
    on left: 40 41 42, on right: 30 31 32 33 36 38
stringliteral (63)
    on left: 43, on right: 39 45 67 81 82
integerliteral (64)
    on left: 44, on right: 46 65 71
simpleliteral (65)
    on left: 45 46, on right: 27 47
literal (66)
    on left: 47 48 49, on right: 74 81
math (67)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
   , on right: 40 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
array (68)
    on left: 68 69 70, on right: 14 41 48
range (69)
    on left: 71, on right: 69
params (70)
    on left: 72 73, on right: 24 68 73
param (71)
    on left: 74 75 76, on right: 72 73
map (72)
    on left: 77 78, on right: 42 49
map_items (73)
    on left: 79 80, on right: 77 80
map_item (74)
    on left: 81 82, on right: 79 80


state 0

    0 $accept: . root $end
    1 root: . stmts
    2 stmts: . stmt
    3      | . stmts stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    root       go to state 9
    stmts      go to state 10
    stmt       go to state 11
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 1

    4 stmt: CONTENT .

    $default  reduce using rule 4 (stmt)


state 2

   13 foreach: FOREACH . PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | FOREACH . PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END

    PARENTHESIS  shift, and go to state 18


state 3

   38 set: SET . PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS

    PARENTHESIS  shift, and go to state 19


state 4

   39 parse: PARSE . PARENTHESIS stringliteral CLOSE_PARENTHESIS

    PARENTHESIS  shift, and go to state 20


state 5

   30 if: IF . PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | IF . PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | IF . PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | IF . PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END

    PARENTHESIS  shift, and go to state 21


state 6

   15 reference: DOLLARID .  [$end, CONTENT, CLOSE_PARENTHESIS, CLOSE_BRACKET, COMMA, CLOSE_BRACE, IN, FOREACH, SET, PARSE, IF, ELSEIF, ELSE, END, DOLLARID, COMMENT, MUL_COMMENT, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD, EQUAL]
   16          | DOLLARID . attributes
   17          | DOLLARID . indexBody
   18          | DOLLARID . indexBody attributes
   19 attributes: . attribute
   20           | . attributes attribute
   21 attribute: . method
   22          | . index
   23          | . identifier
   24 method: . identifier PARENTHESIS params CLOSE_PARENTHESIS
   25       | . identifier PARENTHESIS CLOSE_PARENTHESIS
   26 index: . identifier indexBody
   27 indexBody: . BRACKET simpleliteral CLOSE_BRACKET
   28          | . BRACKET reference CLOSE_BRACKET
   29 identifier: . DOTID

    BRACKET  shift, and go to state 22
    DOTID    shift, and go to state 23

    $default  reduce using rule 15 (reference)

    attributes  go to state 24
    attribute   go to state 25
    method      go to state 26
    index       go to state 27
    indexBody   go to state 28
    identifier  go to state 29


state 7

    7 stmt: COMMENT .

    $default  reduce using rule 7 (stmt)


state 8

    8 stmt: MUL_COMMENT .

    $default  reduce using rule 8 (stmt)


state 9

    0 $accept: root . $end

    $end  shift, and go to state 30


state 10

    1 root: stmts .  [$end]
    3 stmts: stmts . stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    $default  reduce using rule 1 (root)

    stmt       go to state 31
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 11

    2 stmts: stmt .

    $default  reduce using rule 2 (stmts)


state 12

    5 stmt: directive .

    $default  reduce using rule 5 (stmt)


state 13

    9 directive: foreach .

    $default  reduce using rule 9 (directive)


state 14

    6 stmt: reference .

    $default  reduce using rule 6 (stmt)


state 15

   10 directive: if .

    $default  reduce using rule 10 (directive)


state 16

   11 directive: set .

    $default  reduce using rule 11 (directive)


state 17

   12 directive: parse .

    $default  reduce using rule 12 (directive)


state 18

   13 foreach: FOREACH PARENTHESIS . reference IN reference CLOSE_PARENTHESIS stmts END
   14        | FOREACH PARENTHESIS . reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes

    DOLLARID  shift, and go to state 6

    reference  go to state 32


state 19

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   38 set: SET PARENTHESIS . reference EQUAL expression CLOSE_PARENTHESIS

    DOLLARID  shift, and go to state 6

    reference  go to state 33


state 20

   39 parse: PARSE PARENTHESIS . stringliteral CLOSE_PARENTHESIS
   43 stringliteral: . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 34

    stringliteral  go to state 35


state 21

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: IF PARENTHESIS . expression CLOSE_PARENTHESIS stmts END
   31   | IF PARENTHESIS . expression CLOSE_PARENTHESIS stmts else END
   32   | IF PARENTHESIS . expression CLOSE_PARENTHESIS stmts elseifs END
   33   | IF PARENTHESIS . expression CLOSE_PARENTHESIS stmts elseifs else END
   40 expression: . math
   41           | . array
   42           | . map
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral
   68 array: . BRACKET params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET
   77 map: . BRACE map_items CLOSE_BRACE
   78    | . BRACE CLOSE_BRACE

    PARENTHESIS      shift, and go to state 36
    BRACKET          shift, and go to state 37
    BRACE            shift, and go to state 38
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    expression      go to state 42
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 45
    array           go to state 46
    range           go to state 47
    map             go to state 48


state 22

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   27 indexBody: BRACKET . simpleliteral CLOSE_BRACKET
   28          | BRACKET . reference CLOSE_BRACKET
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   45 simpleliteral: . stringliteral
   46              | . integerliteral

    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39

    reference       go to state 49
    stringliteral   go to state 50
    integerliteral  go to state 51
    simpleliteral   go to state 52


state 23

   29 identifier: DOTID .

    $default  reduce using rule 29 (identifier)


state 24

   16 reference: DOLLARID attributes .  [$end, CONTENT, CLOSE_PARENTHESIS, CLOSE_BRACKET, COMMA, CLOSE_BRACE, IN, FOREACH, SET, PARSE, IF, ELSEIF, ELSE, END, DOLLARID, COMMENT, MUL_COMMENT, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD, EQUAL]
   20 attributes: attributes . attribute
   21 attribute: . method
   22          | . index
   23          | . identifier
   24 method: . identifier PARENTHESIS params CLOSE_PARENTHESIS
   25       | . identifier PARENTHESIS CLOSE_PARENTHESIS
   26 index: . identifier indexBody
   29 identifier: . DOTID

    DOTID  shift, and go to state 23

    $default  reduce using rule 16 (reference)

    attribute   go to state 53
    method      go to state 26
    index       go to state 27
    identifier  go to state 29


state 25

   19 attributes: attribute .

    $default  reduce using rule 19 (attributes)


state 26

   21 attribute: method .

    $default  reduce using rule 21 (attribute)


state 27

   22 attribute: index .

    $default  reduce using rule 22 (attribute)


state 28

   17 reference: DOLLARID indexBody .  [$end, CONTENT, CLOSE_PARENTHESIS, CLOSE_BRACKET, COMMA, CLOSE_BRACE, IN, FOREACH, SET, PARSE, IF, ELSEIF, ELSE, END, DOLLARID, COMMENT, MUL_COMMENT, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD, EQUAL]
   18          | DOLLARID indexBody . attributes
   19 attributes: . attribute
   20           | . attributes attribute
   21 attribute: . method
   22          | . index
   23          | . identifier
   24 method: . identifier PARENTHESIS params CLOSE_PARENTHESIS
   25       | . identifier PARENTHESIS CLOSE_PARENTHESIS
   26 index: . identifier indexBody
   29 identifier: . DOTID

    DOTID  shift, and go to state 23

    $default  reduce using rule 17 (reference)

    attributes  go to state 54
    attribute   go to state 25
    method      go to state 26
    index       go to state 27
    identifier  go to state 29


state 29

   23 attribute: identifier .  [$end, CONTENT, CLOSE_PARENTHESIS, CLOSE_BRACKET, COMMA, CLOSE_BRACE, IN, FOREACH, SET, PARSE, IF, ELSEIF, ELSE, END, DOLLARID, DOTID, COMMENT, MUL_COMMENT, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD, EQUAL]
   24 method: identifier . PARENTHESIS params CLOSE_PARENTHESIS
   25       | identifier . PARENTHESIS CLOSE_PARENTHESIS
   26 index: identifier . indexBody
   27 indexBody: . BRACKET simpleliteral CLOSE_BRACKET
   28          | . BRACKET reference CLOSE_BRACKET

    PARENTHESIS  shift, and go to state 55
    BRACKET      shift, and go to state 22

    $default  reduce using rule 23 (attribute)

    indexBody  go to state 56


state 30

    0 $accept: root $end .

    $default  accept


state 31

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


state 32

   13 foreach: FOREACH PARENTHESIS reference . IN reference CLOSE_PARENTHESIS stmts END
   14        | FOREACH PARENTHESIS reference . IN array CLOSE_PARENTHESIS stmts END

    IN  shift, and go to state 57


state 33

   38 set: SET PARENTHESIS reference . EQUAL expression CLOSE_PARENTHESIS

    EQUAL  shift, and go to state 58


state 34

   43 stringliteral: STRING_LITERAL .

    $default  reduce using rule 43 (stringliteral)


state 35

   39 parse: PARSE PARENTHESIS stringliteral . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 59


state 36

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   56     | PARENTHESIS . math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 60


state 37

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   45 simpleliteral: . stringliteral
   46              | . integerliteral
   47 literal: . simpleliteral
   48        | . array
   49        | . map
   68 array: . BRACKET params CLOSE_BRACKET
   68      | BRACKET . params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   70      | BRACKET . CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET
   71      | BRACKET . integerliteral RANGE integerliteral CLOSE_BRACKET
   72 params: . param
   73       | . params COMMA param
   74 param: . literal
   75      | . reference
   76      | . CONSTANT
   77 map: . BRACE map_items CLOSE_BRACE
   78    | . BRACE CLOSE_BRACE

    BRACKET          shift, and go to state 37
    CLOSE_BRACKET    shift, and go to state 61
    BRACE            shift, and go to state 38
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    CONSTANT         shift, and go to state 62
    INTEGER_LITERAL  shift, and go to state 39

    reference       go to state 63
    stringliteral   go to state 50
    integerliteral  go to state 64
    simpleliteral   go to state 65
    literal         go to state 66
    array           go to state 67
    range           go to state 47
    params          go to state 68
    param           go to state 69
    map             go to state 70


state 38

   43 stringliteral: . STRING_LITERAL
   77 map: BRACE . map_items CLOSE_BRACE
   78    | BRACE . CLOSE_BRACE
   79 map_items: . map_item
   80          | . map_items COMMA map_item
   81 map_item: . stringliteral COLON literal
   82         | . stringliteral COLON reference

    CLOSE_BRACE     shift, and go to state 71
    STRING_LITERAL  shift, and go to state 34

    stringliteral  go to state 72
    map_items      go to state 73
    map_item       go to state 74


state 39

   44 integerliteral: INTEGER_LITERAL .

    $default  reduce using rule 44 (integerliteral)


state 40

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   55     | SUB . math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 75


state 41

   66 math: reference .

    $default  reduce using rule 66 (math)


state 42

   30 if: IF PARENTHESIS expression . CLOSE_PARENTHESIS stmts END
   31   | IF PARENTHESIS expression . CLOSE_PARENTHESIS stmts else END
   32   | IF PARENTHESIS expression . CLOSE_PARENTHESIS stmts elseifs END
   33   | IF PARENTHESIS expression . CLOSE_PARENTHESIS stmts elseifs else END

    CLOSE_PARENTHESIS  shift, and go to state 76


state 43

   67 math: stringliteral .

    $default  reduce using rule 67 (math)


state 44

   65 math: integerliteral .

    $default  reduce using rule 65 (math)


state 45

   40 expression: math .  [CLOSE_PARENTHESIS]
   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    LOGICAL_AND         shift, and go to state 77
    LOGICAL_OR          shift, and go to state 78
    LOGIC_EQUAL         shift, and go to state 79
    LOGICAL_LT          shift, and go to state 80
    LOGICAL_LE          shift, and go to state 81
    LOGICAL_GT          shift, and go to state 82
    LOGICAL_GE          shift, and go to state 83
    LOGICAL_NOT_EQUALS  shift, and go to state 84
    ADD                 shift, and go to state 85
    SUB                 shift, and go to state 86
    MUL                 shift, and go to state 87
    DIV                 shift, and go to state 88
    MOD                 shift, and go to state 89

    $default  reduce using rule 40 (expression)


state 46

   41 expression: array .

    $default  reduce using rule 41 (expression)


state 47

   69 array: range .

    $default  reduce using rule 69 (array)


state 48

   42 expression: map .

    $default  reduce using rule 42 (expression)


state 49

   28 indexBody: BRACKET reference . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 90


state 50

   45 simpleliteral: stringliteral .

    $default  reduce using rule 45 (simpleliteral)


state 51

   46 simpleliteral: integerliteral .

    $default  reduce using rule 46 (simpleliteral)


state 52

   27 indexBody: BRACKET simpleliteral . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 91


state 53

   20 attributes: attributes attribute .

    $default  reduce using rule 20 (attributes)


state 54

   18 reference: DOLLARID indexBody attributes .  [$end, CONTENT, CLOSE_PARENTHESIS, CLOSE_BRACKET, COMMA, CLOSE_BRACE, IN, FOREACH, SET, PARSE, IF, ELSEIF, ELSE, END, DOLLARID, COMMENT, MUL_COMMENT, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD, EQUAL]
   20 attributes: attributes . attribute
   21 attribute: . method
   22          | . index
   23          | . identifier
   24 method: . identifier PARENTHESIS params CLOSE_PARENTHESIS
   25       | . identifier PARENTHESIS CLOSE_PARENTHESIS
   26 index: . identifier indexBody
   29 identifier: . DOTID

    DOTID  shift, and go to state 23

    $default  reduce using rule 18 (reference)

    attribute   go to state 53
    method      go to state 26
    index       go to state 27
    identifier  go to state 29


state 55

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   24 method: identifier PARENTHESIS . params CLOSE_PARENTHESIS
   25       | identifier PARENTHESIS . CLOSE_PARENTHESIS
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   45 simpleliteral: . stringliteral
   46              | . integerliteral
   47 literal: . simpleliteral
   48        | . array
   49        | . map
   68 array: . BRACKET params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET
   72 params: . param
   73       | . params COMMA param
   74 param: . literal
   75      | . reference
   76      | . CONSTANT
   77 map: . BRACE map_items CLOSE_BRACE
   78    | . BRACE CLOSE_BRACE

    CLOSE_PARENTHESIS  shift, and go to state 92
    BRACKET            shift, and go to state 37
    BRACE              shift, and go to state 38
    DOLLARID           shift, and go to state 6
    STRING_LITERAL     shift, and go to state 34
    CONSTANT           shift, and go to state 62
    INTEGER_LITERAL    shift, and go to state 39

    reference       go to state 63
    stringliteral   go to state 50
    integerliteral  go to state 51
    simpleliteral   go to state 65
    literal         go to state 66
    array           go to state 67
    range           go to state 47
    params          go to state 93
    param           go to state 69
    map             go to state 70


state 56

   26 index: identifier indexBody .

    $default  reduce using rule 26 (index)


state 57

   13 foreach: FOREACH PARENTHESIS reference IN . reference CLOSE_PARENTHESIS stmts END
   14        | FOREACH PARENTHESIS reference IN . array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   68 array: . BRACKET params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET

    BRACKET   shift, and go to state 37
    DOLLARID  shift, and go to state 6

    reference  go to state 94
    array      go to state 95
    range      go to state 47


state 58

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   38 set: SET PARENTHESIS reference EQUAL . expression CLOSE_PARENTHESIS
   40 expression: . math
   41           | . array
   42           | . map
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral
   68 array: . BRACKET params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET
   77 map: . BRACE map_items CLOSE_BRACE
   78    | . BRACE CLOSE_BRACE

    PARENTHESIS      shift, and go to state 36
    BRACKET          shift, and go to state 37
    BRACE            shift, and go to state 38
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    expression      go to state 96
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 45
    array           go to state 46
    range           go to state 47
    map             go to state 48


state 59

   39 parse: PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS .

    $default  reduce using rule 39 (parse)


state 60

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   56     | PARENTHESIS math . CLOSE_PARENTHESIS
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    CLOSE_PARENTHESIS   shift, and go to state 97
    LOGICAL_AND         shift, and go to state 77
    LOGICAL_OR          shift, and go to state 78
    LOGIC_EQUAL         shift, and go to state 79
    LOGICAL_LT          shift, and go to state 80
    LOGICAL_LE          shift, and go to state 81
    LOGICAL_GT          shift, and go to state 82
    LOGICAL_GE          shift, and go to state 83
    LOGICAL_NOT_EQUALS  shift, and go to state 84
    ADD                 shift, and go to state 85
    SUB                 shift, and go to state 86
    MUL                 shift, and go to state 87
    DIV                 shift, and go to state 88
    MOD                 shift, and go to state 89


state 61

   70 array: BRACKET CLOSE_BRACKET .

    $default  reduce using rule 70 (array)


state 62

   76 param: CONSTANT .

    $default  reduce using rule 76 (param)


state 63

   75 param: reference .

    $default  reduce using rule 75 (param)


state 64

   46 simpleliteral: integerliteral .  [CLOSE_BRACKET, COMMA]
   71 range: BRACKET integerliteral . RANGE integerliteral CLOSE_BRACKET

    RANGE  shift, and go to state 98

    $default  reduce using rule 46 (simpleliteral)


state 65

   47 literal: simpleliteral .

    $default  reduce using rule 47 (literal)


state 66

   74 param: literal .

    $default  reduce using rule 74 (param)


state 67

   48 literal: array .

    $default  reduce using rule 48 (literal)


state 68

   68 array: BRACKET params . CLOSE_BRACKET
   73 params: params . COMMA param

    CLOSE_BRACKET  shift, and go to state 99
    COMMA          shift, and go to state 100


state 69

   72 params: param .

    $default  reduce using rule 72 (params)


state 70

   49 literal: map .

    $default  reduce using rule 49 (literal)


state 71

   78 map: BRACE CLOSE_BRACE .

    $default  reduce using rule 78 (map)


state 72

   81 map_item: stringliteral . COLON literal
   82         | stringliteral . COLON reference

    COLON  shift, and go to state 101


state 73

   77 map: BRACE map_items . CLOSE_BRACE
   80 map_items: map_items . COMMA map_item

    COMMA        shift, and go to state 102
    CLOSE_BRACE  shift, and go to state 103


state 74

   79 map_items: map_item .

    $default  reduce using rule 79 (map_items)


state 75

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   55     | SUB math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD]
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    $default  reduce using rule 55 (math)

    Conflict between rule 55 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UMINUS).
    Conflict between rule 55 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UMINUS).
    Conflict between rule 55 and token LOGIC_EQUAL resolved as reduce (LOGIC_EQUAL < UMINUS).
    Conflict between rule 55 and token LOGICAL_LT resolved as reduce (LOGICAL_LT < UMINUS).
    Conflict between rule 55 and token LOGICAL_LE resolved as reduce (LOGICAL_LE < UMINUS).
    Conflict between rule 55 and token LOGICAL_GT resolved as reduce (LOGICAL_GT < UMINUS).
    Conflict between rule 55 and token LOGICAL_GE resolved as reduce (LOGICAL_GE < UMINUS).
    Conflict between rule 55 and token LOGICAL_NOT_EQUALS resolved as reduce (LOGICAL_NOT_EQUALS < UMINUS).
    Conflict between rule 55 and token ADD resolved as reduce (ADD < UMINUS).
    Conflict between rule 55 and token SUB resolved as reduce (SUB < UMINUS).
    Conflict between rule 55 and token MUL resolved as reduce (MUL < UMINUS).
    Conflict between rule 55 and token DIV resolved as reduce (DIV < UMINUS).
    Conflict between rule 55 and token MOD resolved as reduce (MOD < UMINUS).


state 76

    2 stmts: . stmt
    3      | . stmts stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   30   | IF PARENTHESIS expression CLOSE_PARENTHESIS . stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   31   | IF PARENTHESIS expression CLOSE_PARENTHESIS . stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   32   | IF PARENTHESIS expression CLOSE_PARENTHESIS . stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   33   | IF PARENTHESIS expression CLOSE_PARENTHESIS . stmts elseifs else END
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmts      go to state 104
    stmt       go to state 11
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 77

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   58     | math LOGICAL_AND . math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 105


state 78

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   57     | math LOGICAL_OR . math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 106


state 79

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   59     | math LOGIC_EQUAL . math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 107


state 80

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   60     | math LOGICAL_LT . math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 108


state 81

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   61     | math LOGICAL_LE . math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 109


state 82

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   62     | math LOGICAL_GT . math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 110


state 83

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   63     | math LOGICAL_GE . math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 111


state 84

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   64     | math LOGICAL_NOT_EQUALS . math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 112


state 85

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   50     | math ADD . math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 113


state 86

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   51     | math SUB . math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 114


state 87

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   52     | math MUL . math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 115


state 88

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   53     | math DIV . math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 116


state 89

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   54     | math MOD . math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral

    PARENTHESIS      shift, and go to state 36
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 117


state 90

   28 indexBody: BRACKET reference CLOSE_BRACKET .

    $default  reduce using rule 28 (indexBody)


state 91

   27 indexBody: BRACKET simpleliteral CLOSE_BRACKET .

    $default  reduce using rule 27 (indexBody)


state 92

   25 method: identifier PARENTHESIS CLOSE_PARENTHESIS .

    $default  reduce using rule 25 (method)


state 93

   24 method: identifier PARENTHESIS params . CLOSE_PARENTHESIS
   73 params: params . COMMA param

    CLOSE_PARENTHESIS  shift, and go to state 118
    COMMA              shift, and go to state 100


state 94

   13 foreach: FOREACH PARENTHESIS reference IN reference . CLOSE_PARENTHESIS stmts END

    CLOSE_PARENTHESIS  shift, and go to state 119


state 95

   14 foreach: FOREACH PARENTHESIS reference IN array . CLOSE_PARENTHESIS stmts END

    CLOSE_PARENTHESIS  shift, and go to state 120


state 96

   38 set: SET PARENTHESIS reference EQUAL expression . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 121


state 97

   56 math: PARENTHESIS math CLOSE_PARENTHESIS .

    $default  reduce using rule 56 (math)


state 98

   44 integerliteral: . INTEGER_LITERAL
   71 range: BRACKET integerliteral RANGE . integerliteral CLOSE_BRACKET

    INTEGER_LITERAL  shift, and go to state 39

    integerliteral  go to state 122


state 99

   68 array: BRACKET params CLOSE_BRACKET .

    $default  reduce using rule 68 (array)


state 100

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   45 simpleliteral: . stringliteral
   46              | . integerliteral
   47 literal: . simpleliteral
   48        | . array
   49        | . map
   68 array: . BRACKET params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET
   73 params: params COMMA . param
   74 param: . literal
   75      | . reference
   76      | . CONSTANT
   77 map: . BRACE map_items CLOSE_BRACE
   78    | . BRACE CLOSE_BRACE

    BRACKET          shift, and go to state 37
    BRACE            shift, and go to state 38
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    CONSTANT         shift, and go to state 62
    INTEGER_LITERAL  shift, and go to state 39

    reference       go to state 63
    stringliteral   go to state 50
    integerliteral  go to state 51
    simpleliteral   go to state 65
    literal         go to state 66
    array           go to state 67
    range           go to state 47
    param           go to state 123
    map             go to state 70


state 101

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   45 simpleliteral: . stringliteral
   46              | . integerliteral
   47 literal: . simpleliteral
   48        | . array
   49        | . map
   68 array: . BRACKET params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET
   77 map: . BRACE map_items CLOSE_BRACE
   78    | . BRACE CLOSE_BRACE
   81 map_item: stringliteral COLON . literal
   82         | stringliteral COLON . reference

    BRACKET          shift, and go to state 37
    BRACE            shift, and go to state 38
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39

    reference       go to state 124
    stringliteral   go to state 50
    integerliteral  go to state 51
    simpleliteral   go to state 65
    literal         go to state 125
    array           go to state 67
    range           go to state 47
    map             go to state 70


state 102

   43 stringliteral: . STRING_LITERAL
   80 map_items: map_items COMMA . map_item
   81 map_item: . stringliteral COLON literal
   82         | . stringliteral COLON reference

    STRING_LITERAL  shift, and go to state 34

    stringliteral  go to state 72
    map_item       go to state 126


state 103

   77 map: BRACE map_items CLOSE_BRACE .

    $default  reduce using rule 77 (map)


state 104

    3 stmts: stmts . stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   30   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts . END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   31   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts . else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   32   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts . elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   33   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts . elseifs else END
   34 elseifs: . elseif
   35        | . elseifs elseif
   36 elseif: . ELSEIF PARENTHESIS expression CLOSE_PARENTHESIS stmts
   37 else: . ELSE stmts
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    ELSEIF       shift, and go to state 127
    ELSE         shift, and go to state 128
    END          shift, and go to state 129
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmt       go to state 31
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    elseifs    go to state 130
    elseif     go to state 131
    else       go to state 132
    set        go to state 16
    parse      go to state 17


state 105

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   58     | math LOGICAL_AND math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 58 (math)

    Conflict between rule 58 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 58 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 58 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 58 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 58 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 58 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 58 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 58 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 58 and token ADD resolved as shift (LOGICAL_AND < ADD).
    Conflict between rule 58 and token SUB resolved as shift (LOGICAL_AND < SUB).
    Conflict between rule 58 and token MUL resolved as shift (LOGICAL_AND < MUL).
    Conflict between rule 58 and token DIV resolved as shift (LOGICAL_AND < DIV).
    Conflict between rule 58 and token MOD resolved as shift (LOGICAL_AND < MOD).


state 106

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   57     | math LOGICAL_OR math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 57 (math)

    Conflict between rule 57 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 57 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 57 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 57 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 57 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 57 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 57 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 57 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 57 and token ADD resolved as shift (LOGICAL_OR < ADD).
    Conflict between rule 57 and token SUB resolved as shift (LOGICAL_OR < SUB).
    Conflict between rule 57 and token MUL resolved as shift (LOGICAL_OR < MUL).
    Conflict between rule 57 and token DIV resolved as shift (LOGICAL_OR < DIV).
    Conflict between rule 57 and token MOD resolved as shift (LOGICAL_OR < MOD).


state 107

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   59     | math LOGIC_EQUAL math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 59 (math)

    Conflict between rule 59 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 59 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 59 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 59 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 59 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 59 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 59 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 59 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 59 and token ADD resolved as shift (LOGIC_EQUAL < ADD).
    Conflict between rule 59 and token SUB resolved as shift (LOGIC_EQUAL < SUB).
    Conflict between rule 59 and token MUL resolved as shift (LOGIC_EQUAL < MUL).
    Conflict between rule 59 and token DIV resolved as shift (LOGIC_EQUAL < DIV).
    Conflict between rule 59 and token MOD resolved as shift (LOGIC_EQUAL < MOD).


state 108

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   60     | math LOGICAL_LT math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 60 (math)

    Conflict between rule 60 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 60 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 60 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 60 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 60 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 60 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 60 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 60 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 60 and token ADD resolved as shift (LOGICAL_LT < ADD).
    Conflict between rule 60 and token SUB resolved as shift (LOGICAL_LT < SUB).
    Conflict between rule 60 and token MUL resolved as shift (LOGICAL_LT < MUL).
    Conflict between rule 60 and token DIV resolved as shift (LOGICAL_LT < DIV).
    Conflict between rule 60 and token MOD resolved as shift (LOGICAL_LT < MOD).


state 109

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   61     | math LOGICAL_LE math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 61 (math)

    Conflict between rule 61 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 61 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 61 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 61 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 61 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 61 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 61 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 61 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 61 and token ADD resolved as shift (LOGICAL_LE < ADD).
    Conflict between rule 61 and token SUB resolved as shift (LOGICAL_LE < SUB).
    Conflict between rule 61 and token MUL resolved as shift (LOGICAL_LE < MUL).
    Conflict between rule 61 and token DIV resolved as shift (LOGICAL_LE < DIV).
    Conflict between rule 61 and token MOD resolved as shift (LOGICAL_LE < MOD).


state 110

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   62     | math LOGICAL_GT math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 62 (math)

    Conflict between rule 62 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 62 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 62 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 62 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 62 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 62 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 62 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 62 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 62 and token ADD resolved as shift (LOGICAL_GT < ADD).
    Conflict between rule 62 and token SUB resolved as shift (LOGICAL_GT < SUB).
    Conflict between rule 62 and token MUL resolved as shift (LOGICAL_GT < MUL).
    Conflict between rule 62 and token DIV resolved as shift (LOGICAL_GT < DIV).
    Conflict between rule 62 and token MOD resolved as shift (LOGICAL_GT < MOD).


state 111

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   63     | math LOGICAL_GE math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   64     | math . LOGICAL_NOT_EQUALS math

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 63 (math)

    Conflict between rule 63 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 63 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 63 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 63 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 63 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 63 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 63 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 63 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 63 and token ADD resolved as shift (LOGICAL_GE < ADD).
    Conflict between rule 63 and token SUB resolved as shift (LOGICAL_GE < SUB).
    Conflict between rule 63 and token MUL resolved as shift (LOGICAL_GE < MUL).
    Conflict between rule 63 and token DIV resolved as shift (LOGICAL_GE < DIV).
    Conflict between rule 63 and token MOD resolved as shift (LOGICAL_GE < MOD).


state 112

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]
   64     | math LOGICAL_NOT_EQUALS math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS]

    ADD  shift, and go to state 85
    SUB  shift, and go to state 86
    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 64 (math)

    Conflict between rule 64 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 64 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 64 and token LOGIC_EQUAL resolved as reduce (%left LOGIC_EQUAL).
    Conflict between rule 64 and token LOGICAL_LT resolved as reduce (%left LOGICAL_LT).
    Conflict between rule 64 and token LOGICAL_LE resolved as reduce (%left LOGICAL_LE).
    Conflict between rule 64 and token LOGICAL_GT resolved as reduce (%left LOGICAL_GT).
    Conflict between rule 64 and token LOGICAL_GE resolved as reduce (%left LOGICAL_GE).
    Conflict between rule 64 and token LOGICAL_NOT_EQUALS resolved as reduce (%left LOGICAL_NOT_EQUALS).
    Conflict between rule 64 and token ADD resolved as shift (LOGICAL_NOT_EQUALS < ADD).
    Conflict between rule 64 and token SUB resolved as shift (LOGICAL_NOT_EQUALS < SUB).
    Conflict between rule 64 and token MUL resolved as shift (LOGICAL_NOT_EQUALS < MUL).
    Conflict between rule 64 and token DIV resolved as shift (LOGICAL_NOT_EQUALS < DIV).
    Conflict between rule 64 and token MOD resolved as shift (LOGICAL_NOT_EQUALS < MOD).


state 113

   50 math: math . ADD math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB]
   50     | math ADD math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB]
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 50 (math)

    Conflict between rule 50 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < ADD).
    Conflict between rule 50 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < ADD).
    Conflict between rule 50 and token LOGIC_EQUAL resolved as reduce (LOGIC_EQUAL < ADD).
    Conflict between rule 50 and token LOGICAL_LT resolved as reduce (LOGICAL_LT < ADD).
    Conflict between rule 50 and token LOGICAL_LE resolved as reduce (LOGICAL_LE < ADD).
    Conflict between rule 50 and token LOGICAL_GT resolved as reduce (LOGICAL_GT < ADD).
    Conflict between rule 50 and token LOGICAL_GE resolved as reduce (LOGICAL_GE < ADD).
    Conflict between rule 50 and token LOGICAL_NOT_EQUALS resolved as reduce (LOGICAL_NOT_EQUALS < ADD).
    Conflict between rule 50 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 50 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 50 and token MUL resolved as shift (ADD < MUL).
    Conflict between rule 50 and token DIV resolved as shift (ADD < DIV).
    Conflict between rule 50 and token MOD resolved as shift (ADD < MOD).


state 114

   50 math: math . ADD math
   51     | math . SUB math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB]
   51     | math SUB math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB]
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    MUL  shift, and go to state 87
    DIV  shift, and go to state 88
    MOD  shift, and go to state 89

    $default  reduce using rule 51 (math)

    Conflict between rule 51 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SUB).
    Conflict between rule 51 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SUB).
    Conflict between rule 51 and token LOGIC_EQUAL resolved as reduce (LOGIC_EQUAL < SUB).
    Conflict between rule 51 and token LOGICAL_LT resolved as reduce (LOGICAL_LT < SUB).
    Conflict between rule 51 and token LOGICAL_LE resolved as reduce (LOGICAL_LE < SUB).
    Conflict between rule 51 and token LOGICAL_GT resolved as reduce (LOGICAL_GT < SUB).
    Conflict between rule 51 and token LOGICAL_GE resolved as reduce (LOGICAL_GE < SUB).
    Conflict between rule 51 and token LOGICAL_NOT_EQUALS resolved as reduce (LOGICAL_NOT_EQUALS < SUB).
    Conflict between rule 51 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 51 and token SUB resolved as reduce (%left SUB).
    Conflict between rule 51 and token MUL resolved as shift (SUB < MUL).
    Conflict between rule 51 and token DIV resolved as shift (SUB < DIV).
    Conflict between rule 51 and token MOD resolved as shift (SUB < MOD).


state 115

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD]
   52     | math MUL math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD]
   53     | math . DIV math
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    $default  reduce using rule 52 (math)

    Conflict between rule 52 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MUL).
    Conflict between rule 52 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MUL).
    Conflict between rule 52 and token LOGIC_EQUAL resolved as reduce (LOGIC_EQUAL < MUL).
    Conflict between rule 52 and token LOGICAL_LT resolved as reduce (LOGICAL_LT < MUL).
    Conflict between rule 52 and token LOGICAL_LE resolved as reduce (LOGICAL_LE < MUL).
    Conflict between rule 52 and token LOGICAL_GT resolved as reduce (LOGICAL_GT < MUL).
    Conflict between rule 52 and token LOGICAL_GE resolved as reduce (LOGICAL_GE < MUL).
    Conflict between rule 52 and token LOGICAL_NOT_EQUALS resolved as reduce (LOGICAL_NOT_EQUALS < MUL).
    Conflict between rule 52 and token ADD resolved as reduce (ADD < MUL).
    Conflict between rule 52 and token SUB resolved as reduce (SUB < MUL).
    Conflict between rule 52 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 52 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 52 and token MOD resolved as reduce (%left MOD).


state 116

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD]
   53     | math DIV math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD]
   54     | math . MOD math
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    $default  reduce using rule 53 (math)

    Conflict between rule 53 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < DIV).
    Conflict between rule 53 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < DIV).
    Conflict between rule 53 and token LOGIC_EQUAL resolved as reduce (LOGIC_EQUAL < DIV).
    Conflict between rule 53 and token LOGICAL_LT resolved as reduce (LOGICAL_LT < DIV).
    Conflict between rule 53 and token LOGICAL_LE resolved as reduce (LOGICAL_LE < DIV).
    Conflict between rule 53 and token LOGICAL_GT resolved as reduce (LOGICAL_GT < DIV).
    Conflict between rule 53 and token LOGICAL_GE resolved as reduce (LOGICAL_GE < DIV).
    Conflict between rule 53 and token LOGICAL_NOT_EQUALS resolved as reduce (LOGICAL_NOT_EQUALS < DIV).
    Conflict between rule 53 and token ADD resolved as reduce (ADD < DIV).
    Conflict between rule 53 and token SUB resolved as reduce (SUB < DIV).
    Conflict between rule 53 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 53 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 53 and token MOD resolved as reduce (%left MOD).


state 117

   50 math: math . ADD math
   51     | math . SUB math
   52     | math . MUL math
   53     | math . DIV math
   54     | math . MOD math  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD]
   54     | math MOD math .  [CLOSE_PARENTHESIS, LOGICAL_AND, LOGICAL_OR, LOGIC_EQUAL, LOGICAL_LT, LOGICAL_LE, LOGICAL_GT, LOGICAL_GE, LOGICAL_NOT_EQUALS, ADD, SUB, MUL, DIV, MOD]
   57     | math . LOGICAL_OR math
   58     | math . LOGICAL_AND math
   59     | math . LOGIC_EQUAL math
   60     | math . LOGICAL_LT math
   61     | math . LOGICAL_LE math
   62     | math . LOGICAL_GT math
   63     | math . LOGICAL_GE math
   64     | math . LOGICAL_NOT_EQUALS math

    $default  reduce using rule 54 (math)

    Conflict between rule 54 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MOD).
    Conflict between rule 54 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MOD).
    Conflict between rule 54 and token LOGIC_EQUAL resolved as reduce (LOGIC_EQUAL < MOD).
    Conflict between rule 54 and token LOGICAL_LT resolved as reduce (LOGICAL_LT < MOD).
    Conflict between rule 54 and token LOGICAL_LE resolved as reduce (LOGICAL_LE < MOD).
    Conflict between rule 54 and token LOGICAL_GT resolved as reduce (LOGICAL_GT < MOD).
    Conflict between rule 54 and token LOGICAL_GE resolved as reduce (LOGICAL_GE < MOD).
    Conflict between rule 54 and token LOGICAL_NOT_EQUALS resolved as reduce (LOGICAL_NOT_EQUALS < MOD).
    Conflict between rule 54 and token ADD resolved as reduce (ADD < MOD).
    Conflict between rule 54 and token SUB resolved as reduce (SUB < MOD).
    Conflict between rule 54 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 54 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 54 and token MOD resolved as reduce (%left MOD).


state 118

   24 method: identifier PARENTHESIS params CLOSE_PARENTHESIS .

    $default  reduce using rule 24 (method)


state 119

    2 stmts: . stmt
    3      | . stmts stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   13        | FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS . stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmts      go to state 133
    stmt       go to state 11
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 120

    2 stmts: . stmt
    3      | . stmts stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   14        | FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS . stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmts      go to state 134
    stmt       go to state 11
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 121

   38 set: SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS .

    $default  reduce using rule 38 (set)


state 122

   71 range: BRACKET integerliteral RANGE integerliteral . CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 135


state 123

   73 params: params COMMA param .

    $default  reduce using rule 73 (params)


state 124

   82 map_item: stringliteral COLON reference .

    $default  reduce using rule 82 (map_item)


state 125

   81 map_item: stringliteral COLON literal .

    $default  reduce using rule 81 (map_item)


state 126

   80 map_items: map_items COMMA map_item .

    $default  reduce using rule 80 (map_items)


state 127

   36 elseif: ELSEIF . PARENTHESIS expression CLOSE_PARENTHESIS stmts

    PARENTHESIS  shift, and go to state 136


state 128

    2 stmts: . stmt
    3      | . stmts stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   37 else: ELSE . stmts
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmts      go to state 137
    stmt       go to state 11
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 129

   30 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END .

    $default  reduce using rule 30 (if)


state 130

   32 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs . END
   33   | IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs . else END
   35 elseifs: elseifs . elseif
   36 elseif: . ELSEIF PARENTHESIS expression CLOSE_PARENTHESIS stmts
   37 else: . ELSE stmts

    ELSEIF  shift, and go to state 127
    ELSE    shift, and go to state 128
    END     shift, and go to state 138

    elseif  go to state 139
    else    go to state 140


state 131

   34 elseifs: elseif .

    $default  reduce using rule 34 (elseifs)


state 132

   31 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else . END

    END  shift, and go to state 141


state 133

    3 stmts: stmts . stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   13        | FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts . END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    END          shift, and go to state 142
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmt       go to state 31
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 134

    3 stmts: stmts . stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   14        | FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts . END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    END          shift, and go to state 143
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmt       go to state 31
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 135

   71 range: BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET .

    $default  reduce using rule 71 (range)


state 136

   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   36 elseif: ELSEIF PARENTHESIS . expression CLOSE_PARENTHESIS stmts
   40 expression: . math
   41           | . array
   42           | . map
   43 stringliteral: . STRING_LITERAL
   44 integerliteral: . INTEGER_LITERAL
   50 math: . math ADD math
   51     | . math SUB math
   52     | . math MUL math
   53     | . math DIV math
   54     | . math MOD math
   55     | . SUB math
   56     | . PARENTHESIS math CLOSE_PARENTHESIS
   57     | . math LOGICAL_OR math
   58     | . math LOGICAL_AND math
   59     | . math LOGIC_EQUAL math
   60     | . math LOGICAL_LT math
   61     | . math LOGICAL_LE math
   62     | . math LOGICAL_GT math
   63     | . math LOGICAL_GE math
   64     | . math LOGICAL_NOT_EQUALS math
   65     | . integerliteral
   66     | . reference
   67     | . stringliteral
   68 array: . BRACKET params CLOSE_BRACKET
   69      | . range
   70      | . BRACKET CLOSE_BRACKET
   71 range: . BRACKET integerliteral RANGE integerliteral CLOSE_BRACKET
   77 map: . BRACE map_items CLOSE_BRACE
   78    | . BRACE CLOSE_BRACE

    PARENTHESIS      shift, and go to state 36
    BRACKET          shift, and go to state 37
    BRACE            shift, and go to state 38
    DOLLARID         shift, and go to state 6
    STRING_LITERAL   shift, and go to state 34
    INTEGER_LITERAL  shift, and go to state 39
    SUB              shift, and go to state 40

    reference       go to state 41
    expression      go to state 144
    stringliteral   go to state 43
    integerliteral  go to state 44
    math            go to state 45
    array           go to state 46
    range           go to state 47
    map             go to state 48


state 137

    3 stmts: stmts . stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   37 else: ELSE stmts .  [END]
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    $default  reduce using rule 37 (else)

    stmt       go to state 31
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 138

   32 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END .

    $default  reduce using rule 32 (if)


state 139

   35 elseifs: elseifs elseif .

    $default  reduce using rule 35 (elseifs)


state 140

   33 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else . END

    END  shift, and go to state 145


state 141

   31 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END .

    $default  reduce using rule 31 (if)


state 142

   13 foreach: FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END .

    $default  reduce using rule 13 (foreach)


state 143

   14 foreach: FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END .

    $default  reduce using rule 14 (foreach)


state 144

   36 elseif: ELSEIF PARENTHESIS expression . CLOSE_PARENTHESIS stmts

    CLOSE_PARENTHESIS  shift, and go to state 146


state 145

   33 if: IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END .

    $default  reduce using rule 33 (if)


state 146

    2 stmts: . stmt
    3      | . stmts stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   36 elseif: ELSEIF PARENTHESIS expression CLOSE_PARENTHESIS . stmts
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    stmts      go to state 147
    stmt       go to state 11
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17


state 147

    3 stmts: stmts . stmt
    4 stmt: . CONTENT
    5     | . directive
    6     | . reference
    7     | . COMMENT
    8     | . MUL_COMMENT
    9 directive: . foreach
   10          | . if
   11          | . set
   12          | . parse
   13 foreach: . FOREACH PARENTHESIS reference IN reference CLOSE_PARENTHESIS stmts END
   14        | . FOREACH PARENTHESIS reference IN array CLOSE_PARENTHESIS stmts END
   15 reference: . DOLLARID
   16          | . DOLLARID attributes
   17          | . DOLLARID indexBody
   18          | . DOLLARID indexBody attributes
   30 if: . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts END
   31   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts else END
   32   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs END
   33   | . IF PARENTHESIS expression CLOSE_PARENTHESIS stmts elseifs else END
   36 elseif: ELSEIF PARENTHESIS expression CLOSE_PARENTHESIS stmts .  [ELSEIF, ELSE, END]
   38 set: . SET PARENTHESIS reference EQUAL expression CLOSE_PARENTHESIS
   39 parse: . PARSE PARENTHESIS stringliteral CLOSE_PARENTHESIS

    CONTENT      shift, and go to state 1
    FOREACH      shift, and go to state 2
    SET          shift, and go to state 3
    PARSE        shift, and go to state 4
    IF           shift, and go to state 5
    DOLLARID     shift, and go to state 6
    COMMENT      shift, and go to state 7
    MUL_COMMENT  shift, and go to state 8

    $default  reduce using rule 36 (elseif)

    stmt       go to state 31
    directive  go to state 12
    foreach    go to state 13
    reference  go to state 14
    if         go to state 15
    set        go to state 16
    parse      go to state 17
